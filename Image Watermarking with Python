from PIL import Image, ImageDraw, ImageFont

def add_watermark(input_image_path, output_image_path, watermark_text, position, font_path="arial.ttf", font_size=100):
    """
    Adds a watermark to an image.
    
    :param input_image_path: Path to the input image.
    :param output_image_path: Path where the output image will be saved.
    :param watermark_text: Text of the watermark.
    :param position: A tuple (x, y) representing the position of the watermark.
    :param font_path: Path to the .ttf font file to be used.
    :param font_size: Size of the font.
    """
    image = Image.open(input_image_path).convert("RGBA")
    
    # Make the image editable
    txt = Image.new('RGBA', image.size, (255,255,255,0))

    # Load a font
    font = ImageFont.truetype(font_path, font_size)
    
    d = ImageDraw.Draw(txt)

    # Add text to image
    d.text(position, watermark_text, fill=(255,255,255,128), font=font)
    
    watermarked = Image.alpha_composite(image, txt)
    
    # Convert back to RGB to save in jpg format and preserve transparency with white background
    watermarked = watermarked.convert("RGB")
    
    watermarked.save(output_image_path)

# Example usage
input_image_path = r'C:\Users\sktv6\OneDrive\Desktop\watermark\worldcup.JPEG'#change location
output_image_path = r'C:\Users\sktv6\OneDrive\Desktop\watermark\output_image.jpg'#change location
watermark_text = 'Your Watermark'
position = (10, 10)  # You can adjust this according to your need

# You may need to specify the full path to a font if the default is not found
add_watermark(input_image_path, output_image_path, watermark_text, position)
